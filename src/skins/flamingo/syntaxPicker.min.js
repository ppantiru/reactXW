/*
 #set ($l10nKeys = [
  'web.widgets.syntaxPicker.conversionConfirmation.title',
  'web.widgets.syntaxPicker.conversionUnsupported.acknowledge',
  'no',
  'yes',
  [
    'web.widgets.syntaxPicker.conversionConfirmation.message',
    '<strong class="previousSyntax"></strong>',
    '<strong class="nextSyntax"></strong>'
  ],
  [
    'web.widgets.syntaxPicker.conversionUnsupported.message',
    '<strong class="previousSyntax"></strong>',
    '<strong class="nextSyntax"></strong>'
  ],
  'web.widgets.syntaxPicker.conversion.inProgress',
  'web.widgets.syntaxPicker.conversion.done',
  'web.widgets.syntaxPicker.conversion.failed',
  'web.widgets.syntaxPicker.contentUpdate.inProgress',
  'web.widgets.syntaxPicker.contentUpdate.done',
  'web.widgets.syntaxPicker.contentUpdate.failed'
])
#set ($l10n = {})
#foreach ($key in $l10nKeys)
  #set ($params = $key.subList(1, $key.size()))
  #if ($params)
    #set ($discard = $l10n.put($key[0], $services.localization.render($key[0], $params)))
  #else
    #set ($discard = $l10n.put($key, $services.localization.render($key)))
  #end
#end
#[[*/
'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.createTemplateTagFirstArg=function(f){return f.raw=f};$jscomp.createTemplateTagFirstArgWithRaw=function(f,c){f.raw=c;return f};
(function(f){require(["jquery","xwiki-syntax-converter","bootstrap"],function(c,l){c(document).on("change.xwikiDocumentSyntaxPicker","#xwikidocsyntaxinput2",function(){var b=c(this),g=b.data("previousSyntax"),h=a(b);m(g,h).done(function(k){b.focus();e(b,{previousSyntax:g,syntax:h,convertSyntax:k.convertSyntax})})});var a=function(b){b=b.find("option").filter(":selected");return c.extend(b.data("syntax"),{id:b.val(),label:b.text(),parser:b.data("parser"),renderer:b.data("renderer")})},e=function(b,
g){var h=b.next('input[name="convertSyntax"]').val(g.convertSyntax).data("documentReference"),k=c.Deferred();g=c.extend(g,{promise:k.promise(),savedSyntax:b.data("savedSyntax"),syntaxConverter:l,documentReference:XWiki.Model.resolve(h,XWiki.EntityType.DOCUMENT,XWiki.currentDocument.documentReference)});b.prop("disabled",!0).trigger("xwiki:document:syntaxChange",g);g.promise.always(c.proxy(b,"prop","disabled",!1));b.data("previousSyntax",g.syntax);k.resolve()},d=c('\n    <div id="syntaxConversionConfirmation" class="modal" tabindex="-1" role="dialog">\n      <div class="modal-dialog" role="document">\n        <div class="modal-content">\n          <div class="modal-header">\n            <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n              <span aria-hidden="true">&times;</span>\n            </button>\n            <h4 class="modal-title"></h4>\n          </div>\n          <div class="modal-body"></div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-default dontConvertSyntax" data-dismiss="modal"></button>\n            <button type="button" class="btn btn-primary convertSyntax" data-dismiss="modal"></button>\n            <button type="button" class="btn btn-primary acknowledge" data-dismiss="modal"></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ').on("shown.bs.modal",
function(){d.find(".btn-primary").filter(":visible").focus()}).on("hidden.bs.modal",function(){d.data("deferred").resolve(d.data("data"))}).on("click","button.convertSyntax",function(){d.data("data").convertSyntax=!0}).appendTo("body").modal({show:!1});d.find(".modal-title").text(f["web.widgets.syntaxPicker.conversionConfirmation.title"]);d.find("button.dontConvertSyntax").text(f.no);d.find("button.convertSyntax").text(f.yes);d.find("button.acknowledge").text(f["web.widgets.syntaxPicker.conversionUnsupported.acknowledge"]);
var m=function(b,g){var h=c.Deferred(),k=b.parser&&g.renderer;var p=k?f["web.widgets.syntaxPicker.conversionConfirmation.message"]:f["web.widgets.syntaxPicker.conversionUnsupported.message"];d.find(".modal-body").html(p);d.find(".previousSyntax").text(b.label);d.find(".nextSyntax").text(g.label);d.find("button.dontConvertSyntax, button.convertSyntax").toggle(k);d.find("button.acknowledge").toggle(!k);d.data("deferred",h).data("data",{convertSyntax:!1}).modal("show");return h.promise()};c(document).on("xwiki:actions:cancel.xwikiDocumentSyntaxPicker",
function(b){b=c(b.target).closest("form, .form").find("#xwikidocsyntaxinput2");if(b.length){var g=a(b),h=b.data("savedSyntax");g.id!==h.id&&e(b,{previousSyntax:g,syntax:h,convertSyntax:"true"===b.next('input[name="convertSyntax"]').val(),reverting:!0})}});c(document).on("xwiki:document:saved.xwikiDocumentSyntaxPicker",function(b){b=c(b.target).closest("form, .form").find("#xwikidocsyntaxinput2");b.length&&b.data("savedSyntax",a(b))});var n=function(b,g){c(g&&g.elements||document).find("#xwikidocsyntaxinput2").each(function(){var h=
c(this);if(!h.data("savedSyntax")){var k=a(h);h.data("savedSyntax",k);h.data("previousSyntax",k)}})};c(document).on("xwiki:dom:updated.xwikiDocumentSyntaxPicker",n);c(n)});define("xwiki-syntax-converter",["jquery","xwiki-meta"],function(c,l){return{convert:function(a,e,d){a={form_token:l.form_token,xpage:"get",contentTransformed:!1,outputSyntax:a.type.id,outputSyntaxVersion:a.version};e&&(a.syntaxId=e.id);d&&(a.content=d);return c.post(XWiki.currentDocument.getURL("preview"),a)},render:function(a,
e){a={form_token:l.form_token,xpage:"get",outputTitle:!0,syntaxId:a.id};e&&(a.content=e);return c.post(XWiki.currentDocument.getURL("preview"),a).then(function(d){d=c("<div/>").html(d);return{renderedTitle:d.find("#document-title h1").html(),renderedContent:d.find("#xwikicontent").html()}})}}});require(["jquery"],function(c){c(document).on("xwiki:document:syntaxChange.wikiEditor",function(l,a){var e=c("#content");e.data("syntax")===a.previousSyntax.id&&XWiki.currentDocument.documentReference.equals(a.documentReference)&&
(a.convertSyntax&&e.val()&&!a.reverting?a.promise=a.promise.then(function(){var d=new XWiki.widgets.Notification(f["web.widgets.syntaxPicker.conversion.inProgress"],"inprogress");return a.syntaxConverter.convert(a.syntax,a.previousSyntax,e.val()).done(function(m){e.val(m).data("syntax",a.syntax.id).trigger("change");d.replace(new XWiki.widgets.Notification(f["web.widgets.syntaxPicker.conversion.done"],"done"))}).fail(function(){d.replace(new XWiki.widgets.Notification(f["web.widgets.syntaxPicker.conversion.failed"],
"error"))})}):e.data("syntax",a.syntax.id))})});require(["jquery"],function(c){c(document).on("xwiki:document:syntaxChange.viewMode",function(a,e){var d=c("#xwikicontent").not("[contenteditable]");d.length&&XWiki.currentDocument.documentReference.equals(e.documentReference)&&(e.promise=e.promise.then(function(){var m=new XWiki.widgets.Notification(f["web.widgets.syntaxPicker.contentUpdate.inProgress"],"inprogress");return l(e).done(function(n){c("#document-title h1").html(n.renderedTitle);d.html(n.renderedContent);
c(document).trigger("xwiki:dom:updated",{elements:d.toArray()});m.replace(new XWiki.widgets.Notification(f["web.widgets.syntaxPicker.contentUpdate.done"],"done"))}).fail(function(){m.replace(new XWiki.widgets.Notification(f["web.widgets.syntaxPicker.contentUpdate.failed"],"error"))})}))});var l=function(a){return a.convertSyntax&&a.syntax.id!==a.savedSyntax.id?a.syntaxConverter.convert(a.syntax).then(c.proxy(a.syntaxConverter,"render",a.syntax)):a.syntaxConverter.render(a.syntax)}})}).apply("]]#",
$jsontool.serialize([$l10n]));

//# sourceMappingURL=syntaxPicker.min.js.map
